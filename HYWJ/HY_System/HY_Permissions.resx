<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonX1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAA45JREFUOE9tk3tM
        21UUx08RIuERWpqa7Y8ZQXQj2yzjVZ1MSktQF91wIxMWJitGtjp5tjwKVRwuDhBGEU1dlobBZC2yuUi3
        ILgNBlvY2ATatEBEkNJtQnXQTYdAH19/bYwhxpN8c783uef7Obm5l1UsCiVPAUQBQb609KeTWMze7eNL
        Pm4nud0I8/NnTa5fF/jE42WQbX7J5eeD51ks1rS30RPgkTwplJRv8KgokU2yRDa7SMyj4iQO5b3CWfm2
        YhN6aoToUApRujMCObFs52EBlzz6N0Am5IQrXuM6mrKfxvG3N6BAyP1LLmT7y5M5aC/biq6aXWgrfwsV
        qTE4uI2N9+J5lCPgERWJuVQo4jIkttNLqk36h/Qc3o0OsR55OQDDHVKMXVLgtzt1mOk7iv2bAyGJDqXs
        WGaC8p08UrzOI7mYIZWuIe2OQeaWYGS94DuGRR0WDQ2YuloJk74UGZF+85KoIJJEBRPJk9nMFGx6fztD
        +oYh6RX43UPq/Rj7nn2SuVqK9PiZ3k9w57wc/ZpMbHgqKG5en0K/dr5KJHuRRbkCP5JsYdmwqIXdcALT
        vR/BrC9B+jM0Uabmh55vzp4zte2FWRMHy7lkTJ1NxJQ26YspnYhI9JWdvqvgk2AjJ3H2ShmsfZUwXihE
        r3o/lMc2z7ZclmKoPRO/dCTDOXYEq+ZcrBo/wL2Lu/DT10I1pagmSdx0j4Qqy6YzrfW262cOob0mFQWy
        d9Ay1Ibrc40YadgI90QxMF2OLuV2fP9hgtePtySAUurNwcK6idFPexYwPHgBA80HcFqZgOpjJajqcUDY
        dBVDteHATBVgqYJexsdFeRRw/zhMmpdA4upR3Jh8iOH7DtiWAebl4Y/HSzDefYRb80DPTSNufhYBlzkf
        DmMesxYC40VwmQpgOsUE7K4fweWxhyjpsqOi2w7XyhLsiwuQdTtQe2kEBlUYVkelcI3n4dG1NCwPZmD5
        Rjp+bt0BbUM8SKDoh7rPBkmrBZnNFqRrZpGmmUNZaz/MTeFwGHK94z+4loUr1ZHor9+KW43b0FYX4xDt
        i8indVmdOHByAoXtVhTorMjT3kXO2QVYT4Vhpe9NuA1SPBg4iB/VDI0oZo2iGR9CwTuK84PSdI7AvVoE
        7NHCf48OlNqJytIM3FZFYrAxCt3V/B88jQMn+DT4eTQNfxlL51RxJD0a7/2QIYw8aWvT/+vDvSf/p/4G
        eYcVxwKl3YcAAAAASUVORK5CYII=
</value>
  </data>
</root>